#include <string>
#include <iostream>
#include <vector>
#include <fstream>
#include <sstream>


int main() {


std::ifstream file("in.txt");
std::string line;
int breacets[4] = { 0 };// ) ] } >
std::vector<long long int> sums;
while (getline(file, line)) {


std::istringstream ss(line);
std::istream_iterator<std::string> begin(ss), end;

//putting all the tokens in the vector
std::vector<std::string> arrayTokens(begin, end);
std::vector<char> stack;
int i = 0;
for (; i < arrayTokens[0].size(); i++) {
if (arrayTokens[0][i]=='(' or arrayTokens[0][i] == '<' or arrayTokens[0][i] == '{' or arrayTokens[0][i] == '[' ){
stack.push_back(arrayTokens[0][i]);
}
else {
char a = stack[stack.size() - 1];
char b = arrayTokens[0][i];
if ((a=='(' and b==')') or (a == '[' and b == ']') or (a == '{' and b == '}') or (a == '<' and b == '>')) {
stack.erase(stack.begin()+stack.size()-1);
}
else {
if (arrayTokens[0][i] == ')')breacets[0]++;
if (arrayTokens[0][i] == ']')breacets[1]++;
if (arrayTokens[0][i] == '}')breacets[2]++;
if (arrayTokens[0][i] == '>')breacets[3]++;
break;
}
}
}
long long int sum = 0;
if (i == arrayTokens[0].size()) {
for (int j = stack.size()-1; j >= 0; j--) {
char a = stack[j];
sum *= 5;
if (a == '(') sum += 1;
if (a == '[') sum += 2;
if (a == '{') sum += 3;
if (a == '<') sum += 4;

}
sums.push_back(sum);
}




}

for (int i = 0; i < sums.size(); i++) {

// Last i elements are already in place
for (int j = 0; j < sums.size()-i-1; j++) {
if (sums[j] > sums[j + 1]) {
long long int temp = sums[j];
sums[j] = sums[j + 1];
sums[j + 1] = temp;
}
}
}
long long int sum_final = sums[sums.size() / 2];
int i = breacets[0] * 3 + breacets[1] * 57 + breacets[2] * 1197 + breacets[3] * 25137;
int j = 0;
return breacets[0]*3+breacets[1]*57+breacets[2]*1197+breacets[3]*25137;
}
